#!/usr/bin/env node

/**
 * ircloggr - a nodejs implementation of irc logging visible via
 *            a REST/JSON interface.
 *
 * See LICENSE file for licensing information.
 */

const
path = require("path"),
irc = require('../lib/irc.js'),
config = require('../lib/config.js'),
db = require('../lib/db.js');

// XXX: command line switch handling

// parse config file
try {
  config.parse_config_file();
} catch(e) {
  if (e && e.code === 'EBADF') {
    console.log("missing config file: " + e.path);
  } else {
    console.log("problem reading config file (" + config.config_path + "): " + e);
  }
  process.exit(1);
}

// load up databases
db.connect(function(err) {
  if (err) {
    winston.error("can't connect to database!");
    process.nextTick(process.exit);
  }
  

  // need rooms configured, otherwise, what are we even doing?
  if (Object.keys(config.servers).length === 0) {
    console.log("No irc rooms are configured!  Go update the config file!");
    //    process.exit(1);
  }

  // now connect to specified servers
  var toConnect = [];
  for (var host in config.servers) {
    for (var i = 0; i < config.servers[host].length; i++) {
      var room = config.servers[host][i];
      toConnect.push([host, room]);
    }
  }
  function connectOneRoom() {
    if (toConnect.length == 0) return;
    else {
      var cur = toConnect.shift();
      if (cur[1].substr(0,1) != '#') cur[1] = "#" + cur[1];
      irc.listen(cur[0], cur[1], function(x) {
        if (x !== true) {
          console.log("error connecting to : " + cur[0] + " " + cur[1]);
          process.exit(1);
        }
        connectOneRoom();
      });
    }
  }
  connectOneRoom();
});
